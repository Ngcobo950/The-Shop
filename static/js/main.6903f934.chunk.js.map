{"version":3,"sources":["Item/Item.styles.ts","Item/Item.tsx","Cart/CartItem.styles.tsx","Cart/CartItem.tsx","Cart/Cart.style.ts","Cart/Cart.tsx","App.styles.ts","App.tsx","index.tsx"],"names":["Wrapper","styled","div","Item","item","handleAddToCart","className","src","image","alt","title","description","price","Button","onClick","CartItem","addToCart","removeFromCart","amount","toFixed","size","disableElevation","variant","id","aside","handleClick","alert","Cart","items","cartItems","length","map","reduce","ack","StyledButton","IconButton","getProducts","a","fetch","json","App","useState","cartOpen","setCartOpen","setCartItems","useQuery","data","isLoading","error","console","table","clickedItem","prev","find","LinearProgress","Grid","container","spacing","Drawer","anchor","open","onClose","Badge","badgeContent","color","xs","sm","client","QueryClient","ReactDOM","render","QueryClientProvider","document","getElementById"],"mappings":"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","file":"static/js/main.6903f934.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  border: 1px solid lightblue;\r\n  border-radius: 20px;\r\n  height: 100%;\r\n  button {\r\n    border-radius: 0 0 20px 20px;\r\n  }\r\n  img {\r\n    max-height: 250px;\r\n    object-fit: cover;\r\n    border-radius: 20px 20px 0 0;\r\n  }\r\n  div {\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    padding: 1rem;\r\n    height: 100%;\r\n  }\r\n`;","import Button from '@material-ui/core/Button';\r\n//Types\r\nimport { CartItemType} from '../App';\r\n//Styles\r\nimport { Wrapper } from './Item.styles';\r\n\r\ntype Props = {\r\n    item: CartItemType;\r\n    handleAddToCart: (clickedItem: CartItemType) => void;\r\n}\r\n\r\nconst Item: React.FC<Props> = ({ item, handleAddToCart }) => (\r\n    <Wrapper className='musa'>\r\n        <img src={item.image} alt={item.title} />\r\n        <div>\r\n            <h3>{item.title}</h3>\r\n            <p>{item.description}</p>\r\n            <h3>R{item.price}</h3>\r\n        </div>\r\n        <Button onClick={() => handleAddToCart(item)}>Add to cart</Button>\r\n    </Wrapper>\r\n);\r\n\r\nexport default Item;","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  border-bottom: 1px solid lightblue;\r\n  padding-bottom: 20px;\r\n  div {\r\n    flex: 1;\r\n  }\r\n  .information,\r\n  .buttons {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  img {\r\n    max-width: 80px;\r\n    object-fit: cover;\r\n    margin-left: 40px;\r\n  }\r\n`;","import Button from '@material-ui/core/Button';\r\n//Types\r\nimport {CartItemType} from '../App';\r\nimport Item from '../Item/Item';\r\n//Styles\r\nimport { Wrapper } from './CartItem.styles';\r\n\r\ntype Props = {\r\n    item: CartItemType ;\r\n    addToCart: ( clickedItem:CartItemType) => void;\r\n    removeFromCart: (id:number) => void;\r\n}\r\n\r\nconst CartItem: React.FC<Props>  = ({item , addToCart , removeFromCart}) => (\r\n    <Wrapper>\r\n        <div>\r\n            <h3>{item.title}</h3>\r\n            <div className='information'>\r\n                <p>Price: R{item.price}</p>\r\n                <p>Total: R{(item.amount * item.price).toFixed(2)}</p>\r\n            </div>\r\n            <div className='buttons'>\r\n                <Button size='small' disableElevation variant='contained' onClick={() => removeFromCart(item.id)}>\r\n                    -\r\n                </Button>\r\n                <p>{item.amount}</p>\r\n                <Button size='small' disableElevation variant='contained' onClick={() => addToCart(item)}>\r\n                    +\r\n                </Button>\r\n\r\n            </div>\r\n        </div>\r\n        <img src={item.image} alt={item.title} />\r\n    </Wrapper>\r\n)\r\n\r\nexport default CartItem;","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.aside`\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    width: 500px;\r\n    padding:20px;\r\n`;","import CartItem from '../Cart/CartItem'; \r\nimport { Wrapper } from './Cart.style';\r\nimport { CartItemType } from '../App';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\n\r\ntype Props = {\r\n    cartItems: CartItemType[];\r\n    addToCart: (clickedItem: CartItemType) => void;\r\n    removeFromCart: (id:number) => void;\r\n};\r\n\r\nfunction handleToken(items:any){\r\n    console.log(items)\r\n}\r\n\r\nconst handleClick = () => {\r\n    alert(\"Payment done ....Thank you for shopping with us\")\r\n}\r\n\r\nconst Cart: React.FC<Props> = ({cartItems, addToCart, removeFromCart}) => {\r\n    const calculateTotal = (items:CartItemType[]) =>\r\n        items.reduce((ack:number, item) => ack + item.amount * item.price, 0)\r\n\r\n\r\n\r\n    return(\r\n        <Wrapper>\r\n            <h2>Your Shopping Cart</h2>\r\n            {cartItems.length === 0 ? <p>No items in Cart</p> : null}\r\n            {cartItems.map(item => (\r\n                <CartItem key={item.id} item={item} addToCart={addToCart} removeFromCart={removeFromCart} />\r\n            ))}\r\n            <h2>Total: R{calculateTotal(cartItems).toFixed(2)}</h2>\r\n            <div><button onClick={handleClick}>Pay</button></div>\r\n        \r\n            {/* <div>\r\n                <StripeCheckout stripeKey='pk_test_51IJLjyHypCSTKm5VbVYyTIK8nnNuvK9iPLxPwjjjx8FaMAzZuR5tuPbDPevldOvAd1coFa9M4hoq01ktTfSWKwIE00hdfGtcC0' token={handleToken} />\r\n            </div> */}\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Cart;","import styled from 'styled-components';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport const Wrapper = styled.div`\r\n    margin: 40px;\r\n`;\r\n\r\nexport const StyledButton = styled(IconButton)`\r\n  position: fixed;\r\n  z-index: 100;\r\n  right: 20px;\r\n  top: 20px;\r\n`","import React,{useState} from 'react';\nimport {useQuery} from 'react-query';\n//componets\nimport Item from './Item/Item';\nimport Cart from './Cart/Cart';\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Badge from '@material-ui/core/Badge';\n//Styles\nimport { Wrapper, StyledButton } from './App.styles';\nimport Navbar from './NavAndFooter/Navbar';\n//Types\nexport type CartItemType = {\n  id: number;\n  category: string;\n  description: string;\n  image: string;\n  price: number;\n  title: string;\n  amount: number;\n  email: string;\n\n}\n\nconst getProducts = async (): Promise<CartItemType[]> =>\n  await(await fetch('https:fakestoreapi.com/products')).json();\n\nconst App = () => {\n  const [cartOpen, setCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([] as CartItemType[])\n  const { data, isLoading, error} = useQuery<CartItemType[]>('products',getProducts)\n  console.table(data);\n\n  const getTotalItems = (items: CartItemType[]) => items.reduce((ack:number ,item ) => ack + item.amount, 0)\n\n  const handleAddToCart = (clickedItem: CartItemType) => {\n    setCartItems(prev => {\n      // Checking if item is alredy added in cart\n      const isItemInCart = prev.find(item => item.id === clickedItem.id)\n\n      if(isItemInCart){\n        return prev.map(item => (\n          item.id === clickedItem.id ? {...item, amount: item.amount + 1} : item\n\n        ));\n      }\n      //First tiime the item is added\n      return [...prev, {...clickedItem , amount: 1}];\n    });\n  };\n\n  const handleRemoveFromCart = (id: number) => {\n    setCartItems(prev => (\n      prev.reduce((ack, item) =>{\n        if(item.id === id){\n          if ( item.amount === 1) return ack;\n          return [...ack, {...item , amount: item.amount - 1}]\n        }else{\n          return [...ack, item]\n        }\n\n      }, [] as CartItemType[])\n    ))\n  };\n\n  if(isLoading) return <LinearProgress/> ;\n  if (error) return <div>Something went wrong...</div>\n\n   return (\n    <Wrapper>\n      <Grid container spacing={3}>\n        <Drawer anchor='right' open={cartOpen} onClose={() => setCartOpen(false)}>\n          <Cart cartItems={cartItems} addToCart={handleAddToCart} removeFromCart={handleRemoveFromCart} />\n        </Drawer>\n        <StyledButton onClick={() => setCartOpen(true)}>\n          <Badge badgeContent={getTotalItems(cartItems)} color='error'>\n            <AddShoppingCartIcon />\n          </Badge>\n        </StyledButton>\n        {data?.map(item => (\n          <Grid item key={item.id} xs={2} sm={4}>\n            <Item item={item} handleAddToCart={handleAddToCart} />\n          </Grid>\n        ))}\n      </Grid>\n    </Wrapper>\n  );\n}\n\nexport default App;\n ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {QueryClient , QueryClientProvider} from 'react-query';\n\nconst client = new QueryClient();\n\nReactDOM.render(\n  <QueryClientProvider client={client}>\n    <App />\n  </QueryClientProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}